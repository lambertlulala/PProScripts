
function copyPproconfTo(dstPath)
    local pproconf = pprofolder ++ "pproconf.pcf"
    if (file.copy(pproconf, dstPath)) do
        *Message Successfully copy pproconf.pcf to &(dstPath)
    else
        *Message Failed to copy pproconf.pcf to ++ &(dstPath)
    endif
endfunction

function emptyRecyclebin()
    do("cmd.exe", ?+/c pwsh.exe -Command "Clear-RecycleBin -Force"+)
endfunction

function showRecyclebin()
    do("shell:RecycleBinFolder")
endfunction

function openWithTig()
    local path = inputfolder
    if (path) do
        path = path.replacechars("\\", "/")
        do("tig.exe", "-C \"" ++ path ++ "\"")
    endif
endfunction

function copyNewGUID()
    do("pwsh.exe", "-Command [guid]::NewGuid().toString() | clip")
endfunction

function downloadMP3FromYoutube()
    local folder = inputfolder
    if (folder) do
        local url = input("Youtube URL to download")
        if (!url) do
            quit
        endif

        local params = "/c yt-dlp --extract-audio --audio-format mp3 " ++ url ++  " -P " ++ "\"" ++ folder ++ "\""
        do("cmd.exe", params)
    endif
endfunction

function showOrgAgenda()
    local result
    pipe.listen_off
    pipe.listen_on("powerpro", 0, "result")
    file.runwait(0, "cmd.exe", ?+/c wsl.exe emacs -batch -l ~/.emacs.d/init.el -eval '(org-batch-agenda "a" org-agenda-span 30)' > \\.\pipe\Powerpro+, "", "hide")
    pipe.listen_off
    pickstring(result, "Org Agenda", 2)
endfunction

function convertToLinuxPath(path)
    local resultPath

    if (find(path, ?+\\wsl+) != -1) do
        local cvt = path.replacechars("\\", "/")
        local pos = 2
        cvt = slice(cvt, pos, length(cvt) - 1)
        for (local i = 0; i < 2; i++)
            pos = find(cvt, "/")
            if (pos != -1) do
                cvt = slice(cvt, pos + 1, length(cvt) - 1)
            endif
        endfor
        resultPath = "/" ++ cvt
    else
        local command = "wsl wslpath " ++ "\"" ++ path ++ "\""
        pipe.listen_off
        pipe.listen_on("powerpro", 0, "resultPath")
        file.runwait(0, "cmd.exe", "/c " ++ command ++ ?+ > \\.\pipe\Powerpro+, "", "hide")
        pipe.listen_off
    endif

    return(resultPath.removechars("\r\n"))
endfunction

function openWithMagit()
    local repo = inputfolder
    if (repo) do
        local command = "wsl wslpath " ++ "\"" ++ repo ++ "\""
        local path

        pipe.listen_off
        pipe.listen_on("powerpro", 0, "path")
        file.runwait(0, "cmd.exe", "/c " ++ command ++ ?+ > \\.\pipe\Powerpro+, "", "hide")
        pipe.listen_off

        do("wt.exe", "new-tab wsl emacs -nw -eval '(magit-status " ++ "\\\"" ++ path.removechars("\r\n") ++ "\\\")'")
    endif
endfunction

function editWithEmacs(path)
    local cvtPath = convertToLinuxPath(path)
    do("wt.exe", "new-tab wsl emacs -nw \"" ++ cvtPath ++ "\"")
endfunction

function editWithEmacsDaemon(path)
    local cvtPath = convertToLinuxPath(path)
    do("wt.exe", "new-tab wsl emacsclient -nw -a '' \"" ++ cvtPath ++ "\"")
endfunction

function searchAndPickResult(barName)
    local result
    for (local run = 1; run;)
        local searchPattern = input("Search")
        if (searchPattern) do
            if (cl.exists(barName)) do
                local hBar = cl.getBarHandle(barName)
                win.setfocus(hBar)
            endif

            local searchResult = pptools.evsearch(searchPattern)
            if (searchResult) do
                setnextdialogpos(win.vscreenwidth / 2 - 400, win.vscreenheight / 2 - 200, 800, 400, "topmost")
                result = pickstring(searchResult, "Pick Result", 2)
                if (result) do
                    run = 0
                endif
            endif
        else
            run = 0
        endif
    endfor

    return(result)
endfunction

function searchAndEditWithEmacs(barName)
    local fileToEdit = searchAndPickResult(barName)
    if (fileToEdit) do
        editWithEmacs(fileToEdit)
    endif
endfunction

function searchAndEditWithEmacsDaemon(barName)
    local fileToEdit = searchAndPickResult(barName)
    if (fileToEdit) do
        editWithEmacsDaemon(fileToEdit)
    endif
endfunction

function switchToWindow(barName, width, height)
    local inputTitle = "PPro Switch to window"
    local inputHandle = window("visiblewindow", "*" ++ inputTitle ++ "*")
    if (win.exists(inputHandle)) do
        local rect = win.getrect(inputHandle)
        local x = word(rect, 1)
        local y = word(rect, 2)
        win.sendmouse("ab", x, y, "lc")
        quit
    endif

    local wlist = window("visiblewindow", "*")
    local windowList
    for (local j = 1; ; j++)
        local handle = word(wlist, j)
        if (handle == "") do
            break
        endif

        local exStyle = win.getexstyle(handle)
        if ((exStyle & 0x080) && !(exStyle & 0x040000)) do
            continue
        endif

        local text = win.gettext(handle)
        if (text != "") do
            local fullPath = window("exefullpath", handle)
            local display = "[" ++ handle ++ "]    " ++ text ++ "    (" ++ fullPath ++ ")"
            windowList = windowList ++ display ++ "\r"
        endif
    endfor

    if (cl.exists(barName)) do
        local hBar = cl.getBarHandle(barName)
        win.setfocus(hBar)
    endif

    local x = win.vscreenwidth / 2 - width / 2
    local y = win.vscreenheight / 2 - height / 2
    setnextdialogpos(x, y, width, height, "topmost")
    local sel = pickstring(ansitoutf8(windowList), inputTitle, 2)
    if (sel) do
        local idx = find(sel, "]")
        if (idx > 0) do
            local handle = slice(sel, 1, idx - 1)
            window.show(handle)
        endif
    else
        win.resetfocus(15)
    endif
endfunction

function navigateToFolder(barName)
    local item = searchAndPickResult(barName)
    if (!item) do
        quit
    endif

    local folder
    local lastChar = slice(item, -1)
    if (lastChar == "\\") do
        item = slice(item, 0, length(item) - 2)
    endif

    if (file.isfolder(item)) do
        folder = item
    else
        local pos = revfind(item, "\\")
        if (pos != -1) do
            folder = slice(item, 0, pos - 1)
        endif
    endif

    *Keys {to *} ^l{w1}&(folder){enter}
endfunction

function handleClipboard(barName)
    local inputTitle = "PPro Select clipboard item"
    local inputHandle = window("visiblewindow", "*" ++ inputTitle ++ "*")
    if (win.exists(inputHandle)) do
        local rect = win.getrect(inputHandle)
        local x = word(rect, 1)
        local y = word(rect, 2)
        win.sendmouse("ab", x, y, "lc")
        quit
    endif

    if (cl.exists(barName)) do
        win.setfocus(cl.getBarHandle(barName))
    endif

    for (local run = 1; run;)
        local searchResult = pptools.evsearch("*.powerproclip", "dc-")
        setnextdialogpos(win.vscreenwidth / 2 - 400, win.vscreenheight / 2 - 200, 800, 400, "topmost")
        local result = pickstring(ansitoutf8(searchResult), inputTitle, 2)
        if (result) do
            local action = pickstring("Preview\rCopy\rSave as BMP", inputTitle, 2)
            if (action) do
                switch (_pickedline_)
                    case 1
                        menu.folder(result ++ ".*", "center")
                        break
                    case 2
                        clip.load(result)
                        break
                    case 3
                        local pathToSave = inputsaveaspath
                        if (pathToSave) do
                            local currentData = env("TEMP") ++ "\\tmp.PowerProClip"
                            clip.save(currentData)
                            clip.load(result)
                            clip.bmptofile(pathToSave)
                            clip.load(currentData)
                            file.deletenorecycle(currentData)
                        endif
                        break
                endswitch
                run = 0
            endif
        else
            run = 0
        endif
    endfor

    win.resetfocus(15)
endfunction