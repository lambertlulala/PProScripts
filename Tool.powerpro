
function copyPproconfTo(dstPath)
    local pproconf = pprofolder ++ "pproconf.pcf"
    if (file.copy(pproconf, dstPath)) do
        *Message Successfully copy pproconf.pcf to &(dstPath)
    else
        *Message Failed to copy pproconf.pcf to ++ &(dstPath)
    endif
endfunction

function emptyRecyclebin()
    do("cmd.exe", ?+/c pwsh.exe -Command "Clear-RecycleBin -Force"+)
endfunction

function showRecyclebin()
    do("shell:RecycleBinFolder")
endfunction

function openWithTig()
    local path = inputfolder
    if (path) do
        path = path.replacechars("\\", "/")
        do("tig.exe", "-C \"" ++ path ++ "\"")
    endif
endfunction

function copyNewGUID()
    do("pwsh.exe", "-Command [guid]::NewGuid().toString() | clip")
endfunction

function downloadMP3FromYoutube()
    local folder = inputfolder
    if (folder) do
        local url = input("Youtube URL to download")
        if (!url) do
            quit
        endif

        local params = "/c yt-dlp --extract-audio --audio-format mp3 " ++ url ++  " -P " ++ "\"" ++ folder ++ "\""
        do("cmd.exe", params)
    endif
endfunction

function showOrgAgenda()
    local result
    pipe.listen_off
    pipe.listen_on("powerpro", 0, "result")
    file.runwait(0, "cmd.exe", ?+/c wsl.exe emacs -batch -l ~/.emacs.d/init.el -eval '(org-batch-agenda "a" org-agenda-span 30)' > \\.\pipe\Powerpro+, "", "hide")
    pipe.listen_off
    pickstring(result, "Org Agenda", 2)
endfunction

function openWithMagit()
    local repo = inputfolder
    if (repo) do
        local command = "wsl wslpath " ++ "\"" ++ repo ++ "\""
        local path

        pipe.listen_off
        pipe.listen_on("powerpro", 0, "path")
        file.runwait(0, "cmd.exe", "/c " ++ command ++ ?+ > \\.\pipe\Powerpro+, "", "hide")
        pipe.listen_off

        do("wt.exe", "new-tab wsl emacs -nw -eval '(magit-status " ++ "\\\"" ++ path.removechars("\r\n") ++ "\\\")'")
    endif
endfunction